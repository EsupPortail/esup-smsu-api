<?xml version="1.0" encoding="UTF-8" ?>

<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!-- 
		The configuration file for sms services.
		This file is referenced by /properties/applicationContext.xml.
	-->

	<!-- par défaut, on utilise les même clefs pour le servlet et pour l'accés à smsenvoi -->
	<!--bean id="initSslParameters" class="org.esupportail.smsuapi.services.sms.impl.proxy.InitSSLParameters">
		<property name="trustStore" value="${global.truststore}" />
		<property name="trustStorePassword" value="${global.truststorePass}" />
		<property name="keyStore" value="${global.keystore}" />
		<property name="keyStorePassword" value="${global.keypass}" />
	</bean-->

	<bean
		class="org.esupportail.smsuapi.services.sms.impl.smsenvoi.SMSSenderSmsenvoi">
		<description>
			Smsenvoi implementation of the broker, this class manage the sms sending
		</description>
		<property name="user_key" value="${sms.connector.smsenvoi.account.user_key}" />
		<property name="access_token" value="${sms.connector.smsenvoi.account.access_token}" />
		<property name="sendsms_url" value="https://api.smsenvoi.com/API/v1.0/REST/sms" />
		<property name="from_mapJSON" value="${sms.connector.smsenvoi.from.mapJSON}" />
		<property name="simulateMessageSending">
			<value type="boolean">${sms.connector.simulateSending}</value>
		</property>
		<property name="restTemplate">
				<bean class="org.springframework.web.client.RestTemplate">
					<property name="messageConverters">
						<list>
							<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
						</list>
					</property>
				</bean>
			</property>

	</bean>

	<bean
	    class="org.esupportail.smsuapi.services.sms.impl.smsenvoi.BackChannelAck">
	</bean>

</beans>
